testResponse
============

.. py:module:: testResponse

.. autoapi-nested-parse::

   Part of Semper-KI software

   Silvio Weging 2023

   Contains: Handling test calls



Attributes
----------

.. autoapisummary::

   testResponse.loggerError


Classes
-------

.. autoapisummary::

   testResponse.restTestAPI
   testResponse.SReqUploadTestFiles


Functions
---------

.. autoapisummary::

   testResponse.find_mins_maxs
   testResponse.stlToBinJpg
   testResponse.testPreview


Module Contents
---------------

.. py:data:: loggerError

.. py:class:: restTestAPI(**kwargs)

   Bases: :py:obj:`rest_framework.views.APIView`


   Intentionally simple parent class for all views. Only implements
   dispatch-by-method and simple sanity checking.


   .. py:class:: RequestSerializer(instance=None, data=empty, **kwargs)

      Bases: :py:obj:`rest_framework.serializers.Serializer`


      The BaseSerializer class provides a minimal class which may be used
      for writing custom serializer implementations.

      Note that we strongly restrict the ordering of operations/properties
      that may be used on the serializer in order to enforce correct usage.

      In particular, if a `data=` argument is passed then:

      .is_valid() - Available.
      .initial_data - Available.
      .validated_data - Only available after calling `is_valid()`
      .errors - Only available after calling `is_valid()`
      .data - Only available after calling `is_valid()`

      If a `data=` argument is not passed then:

      .is_valid() - Not available.
      .initial_data - Not available.
      .validated_data - Not available.
      .errors - Not available.
      .data - Available.


      .. py:attribute:: name


      .. py:attribute:: age



   .. py:class:: ResponseSerializer(instance=None, data=empty, **kwargs)

      Bases: :py:obj:`rest_framework.serializers.Serializer`


      The BaseSerializer class provides a minimal class which may be used
      for writing custom serializer implementations.

      Note that we strongly restrict the ordering of operations/properties
      that may be used on the serializer in order to enforce correct usage.

      In particular, if a `data=` argument is passed then:

      .is_valid() - Available.
      .initial_data - Available.
      .validated_data - Only available after calling `is_valid()`
      .errors - Only available after calling `is_valid()`
      .data - Only available after calling `is_valid()`

      If a `data=` argument is not passed then:

      .is_valid() - Not available.
      .initial_data - Not available.
      .validated_data - Not available.
      .errors - Not available.
      .data - Available.


      .. py:attribute:: name


      .. py:attribute:: age


      .. py:attribute:: dummy



   .. py:method:: get(request, dummy: str, format=None)


   .. py:method:: post(request, dummy: str, format=None)


.. py:function:: find_mins_maxs(obj)

.. py:function:: stlToBinJpg(file) -> str

   Convert stl file to jpg

   :param file: open file from redis
   :type file: binary file
   :return: jpg for rendering
   :rtype: JPG as base64 encoded binary string



.. py:class:: SReqUploadTestFiles(instance=None, data=empty, **kwargs)

   Bases: :py:obj:`rest_framework.serializers.Serializer`


   The BaseSerializer class provides a minimal class which may be used
   for writing custom serializer implementations.

   Note that we strongly restrict the ordering of operations/properties
   that may be used on the serializer in order to enforce correct usage.

   In particular, if a `data=` argument is passed then:

   .is_valid() - Available.
   .initial_data - Available.
   .validated_data - Only available after calling `is_valid()`
   .errors - Only available after calling `is_valid()`
   .data - Only available after calling `is_valid()`

   If a `data=` argument is not passed then:

   .is_valid() - Not available.
   .initial_data - Not available.
   .validated_data - Not available.
   .errors - Not available.
   .data - Available.


   .. py:attribute:: files


.. py:function:: testPreview(request: rest_framework.request.Request)

