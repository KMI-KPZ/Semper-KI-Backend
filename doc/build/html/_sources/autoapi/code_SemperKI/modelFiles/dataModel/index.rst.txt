code_SemperKI.modelFiles.dataModel
==================================

.. py:module:: code_SemperKI.modelFiles.dataModel

.. autoapi-nested-parse::

   Part of Semper-KI software

   Silvio Weging 2023

   Contains: Models for data



Classes
-------

.. autoapisummary::

   code_SemperKI.modelFiles.dataModel.DataDescription
   code_SemperKI.modelFiles.dataModel.Data
   code_SemperKI.modelFiles.dataModel.DataInterface


Module Contents
---------------

.. py:class:: DataDescription

   Bases: :py:obj:`Generic_Backend.code_General.utilities.customStrEnum.StrEnumExactlyAsDefined`


   What does a data entry consists of?



   .. py:attribute:: dataID


   .. py:attribute:: process


   .. py:attribute:: processID


   .. py:attribute:: type


   .. py:attribute:: data


   .. py:attribute:: details


   .. py:attribute:: createdBy


   .. py:attribute:: contentID


   .. py:attribute:: createdWhen


   .. py:attribute:: updatedWhen


   .. py:attribute:: accessedWhen


.. py:class:: Data(*args, **kwargs)

   Bases: :py:obj:`django.db.models.Model`


   Data management class.

   :dataID: Primary Key with hash
   :process: Link to the process that created this entry
   :type: Type of data, defined in another enum
   :data: The data itself
   :details: Meta data and other information
   :createdBy: Who created this data
   :contentID: ID of a file for example, makes searching easier
   :createdWhen: Automatically assigned date and time(UTC+0) when the entry is created
   :updatedWhen: Date and time at which the entry was updated
   :accessedWhen: Last date and time the data was fetched from the database, automatically set


   .. py:attribute:: dataID


   .. py:attribute:: process


   .. py:attribute:: type


   .. py:attribute:: data


   .. py:attribute:: details


   .. py:attribute:: createdBy


   .. py:attribute:: contentID


   .. py:attribute:: createdWhen


   .. py:attribute:: updatedWhen


   .. py:attribute:: accessedWhen


   .. py:class:: Meta

      .. py:attribute:: ordering
         :value: ['createdWhen']



      .. py:attribute:: indexes



   .. py:method:: __str__()


   .. py:method:: toDict()


.. py:class:: DataInterface(dataID, processID, type, data, details, createdBy, contentID, createdWhen)

   Data management class as an interface

   :dataID: Primary Key with hash
   :processID: Link to the process that created this entry
   :type: Type of data, defined in another enum
   :data: The data itself
   :details: Meta data and other information
   :createdBy: Who created this data
   :contentID: ID of a file for example, makes searching easier
   :createdWhen: Automatically assigned date and time(UTC+0) when the entry is created


   .. py:attribute:: dataID
      :type:  str


   .. py:attribute:: processID
      :type:  str


   .. py:attribute:: type
      :type:  int


   .. py:attribute:: data
      :type:  dict


   .. py:attribute:: details
      :type:  dict


   .. py:attribute:: createdBy
      :type:  str


   .. py:attribute:: contentID
      :type:  str


   .. py:attribute:: createdWhen
      :type:  str


   .. py:method:: toDict()


