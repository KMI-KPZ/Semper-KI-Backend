code_SemperKI.handlers.public.statemachine
==========================================

.. py:module:: code_SemperKI.handlers.public.statemachine

.. autoapi-nested-parse::

   Part of Semper-KI software

   Akshay NS 2024

   Contains: State machine handlers



Attributes
----------

.. autoapisummary::

   code_SemperKI.handlers.public.statemachine.logger
   code_SemperKI.handlers.public.statemachine.loggerError


Classes
-------

.. autoapisummary::

   code_SemperKI.handlers.public.statemachine.SReqButtonData
   code_SemperKI.handlers.public.statemachine.SReqStatusButtons


Functions
---------

.. autoapisummary::

   code_SemperKI.handlers.public.statemachine.getStateMachine
   code_SemperKI.handlers.public.statemachine.statusButtonRequest


Module Contents
---------------

.. py:data:: logger

.. py:data:: loggerError

.. py:function:: getStateMachine(request: rest_framework.request.Request)

   Print out the whole state machine and all transitions

   :param request: GET Request
   :type request: HTTP GET
   :return: Response with graph in JSON Format
   :rtype: JSONResponse



.. py:class:: SReqButtonData(instance=None, data=empty, **kwargs)

   Bases: :py:obj:`rest_framework.serializers.Serializer`


   The BaseSerializer class provides a minimal class which may be used
   for writing custom serializer implementations.

   Note that we strongly restrict the ordering of operations/properties
   that may be used on the serializer in order to enforce correct usage.

   In particular, if a `data=` argument is passed then:

   .is_valid() - Available.
   .initial_data - Available.
   .validated_data - Only available after calling `is_valid()`
   .errors - Only available after calling `is_valid()`
   .data - Only available after calling `is_valid()`

   If a `data=` argument is not passed then:

   .is_valid() - Not available.
   .initial_data - Not available.
   .validated_data - Not available.
   .errors - Not available.
   .data - Available.


   .. py:attribute:: type


   .. py:attribute:: targetStatus


.. py:class:: SReqStatusButtons(instance=None, data=empty, **kwargs)

   Bases: :py:obj:`rest_framework.serializers.Serializer`


   The BaseSerializer class provides a minimal class which may be used
   for writing custom serializer implementations.

   Note that we strongly restrict the ordering of operations/properties
   that may be used on the serializer in order to enforce correct usage.

   In particular, if a `data=` argument is passed then:

   .is_valid() - Available.
   .initial_data - Available.
   .validated_data - Only available after calling `is_valid()`
   .errors - Only available after calling `is_valid()`
   .data - Only available after calling `is_valid()`

   If a `data=` argument is not passed then:

   .is_valid() - Not available.
   .initial_data - Not available.
   .validated_data - Not available.
   .errors - Not available.
   .data - Available.


   .. py:attribute:: projectID


   .. py:attribute:: processIDs


   .. py:attribute:: buttonData


.. py:function:: statusButtonRequest(request: rest_framework.request.Request)

   Button was clicked, so the state must change (transition inside state machine)

   :param request: POST Request
   :type request: HTTP POST
   :return: Response with new buttons
   :rtype: JSONResponse


