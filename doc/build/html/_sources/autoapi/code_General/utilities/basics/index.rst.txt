:py:mod:`code_General.utilities.basics`
=======================================

.. py:module:: code_General.utilities.basics

.. autoapi-nested-parse::

   Part of Semper-KI software

   Silvio Weging 2023

   Contains: Basic stuff that is imported everywhere



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   code_General.utilities.basics.Logging



Functions
~~~~~~~~~

.. autoapisummary::

   code_General.utilities.basics.checkIfTokenValid
   code_General.utilities.basics.manualCheckifLoggedIn
   code_General.utilities.basics.checkIfUserIsLoggedIn
   code_General.utilities.basics.checkIfUserIsAdmin
   code_General.utilities.basics.handleTooManyRequestsError
   code_General.utilities.basics.manualCheckIfRightsAreSufficient
   code_General.utilities.basics.manualCheckIfRightsAreSufficientForSpecificOperation
   code_General.utilities.basics.checkIfRightsAreSufficient



.. py:function:: checkIfTokenValid(token)

   Check whether the token of a user has expired and a new login is necessary

   :param token: User session token
   :type token: Dictionary
   :return: True if the token is valid or False if not
   :rtype: Bool


.. py:function:: manualCheckifLoggedIn(session)

   Check whether a user is logged in or not.

   :param session: Session of user
   :type session: dict
   :return: Response whether the user is logged in or not.
   :rtype: Bool


.. py:function:: checkIfUserIsLoggedIn(json=False)

   Check whether a user is logged in or not.

   :param json: Controls if the output is in JSON Format or not
   :type json: Bool
   :return: Response whether the user is logged in or not. If so, call the function.
   :rtype: HTTPRespone/JSONResponse, Func


.. py:function:: checkIfUserIsAdmin(json=False)

   Check whether the current user is an admin or not

   :param json: Controls if the output is in JSON Format or not
   :type json: Bool
   :return: Response whether the user is an admin or not. If so, call the function.
   :rtype: HTTPRespone/JSONResponse, Func


.. py:function:: handleTooManyRequestsError(callToAPI)

   Calls the function and checks, if there were too many requests. If so, repeat the request until it's done.
   :param callToAPI: Function call to Auth0 API
   :type callToAPI: Lambda func
   :return: Either an error, or the response
   :rtype: Exception | JSON/Dict


.. py:function:: manualCheckIfRightsAreSufficient(session, funcName)

   Check whether a user has the permissions to do something.

   :param session: Session of user
   :type session: dict
   :param funcName: The function that called this
   :type funcName: str
   :return: Response whether the user is logged in or not.
   :rtype: Bool


.. py:function:: manualCheckIfRightsAreSufficientForSpecificOperation(session, funcName, operation)

   Check whether a user has the permissions to do something.

   :param session: Session of user
   :type session: dict
   :param funcName: The function that called this
   :type funcName: str
   :return: Response whether the user is logged in or not.
   :rtype: Bool


.. py:function:: checkIfRightsAreSufficient(json=False)

   Check whether a user has sufficient rights to call that function.

   :param json: Controls if the output is in JSON Format or not
   :type json: Bool
   :return: Response if the rights were not sufficient, function call if they were.
   :rtype: HTTPRespone/JSONResponse, Func


.. py:class:: Logging

   .. py:class:: Subject

      Bases: :py:obj:`code_General.utilities.customStrEnum.StrEnumExactylAsDefined`

      .. py:attribute:: USER
         

         

      .. py:attribute:: ADMIN
         

         

      .. py:attribute:: ORGANISATION
         

         

      .. py:attribute:: SYSTEM
         

         

      .. py:attribute:: SUBJECT
         

         


   .. py:class:: Predicate

      Bases: :py:obj:`code_General.utilities.customStrEnum.StrEnumExactylAsDefined`

      .. py:attribute:: CREATED
         

         

      .. py:attribute:: DEFINED
         

         

      .. py:attribute:: FETCHED
         

         

      .. py:attribute:: EDITED
         

         

      .. py:attribute:: DELETED
         

         

      .. py:attribute:: PREDICATE
         

         


   .. py:class:: Object

      Bases: :py:obj:`code_General.utilities.customStrEnum.StrEnumExactylAsDefined`

      .. py:attribute:: USER
         

         

      .. py:attribute:: ADMIN
         

         

      .. py:attribute:: ORGANISATION
         

         

      .. py:attribute:: SYSTEM
         

         

      .. py:attribute:: SELF
         

         

      .. py:attribute:: OBJECT
         

         



