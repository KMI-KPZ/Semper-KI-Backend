code_General.handlers.files
===========================

.. py:module:: code_General.handlers.files

.. autoapi-nested-parse::

   Generic Backend

   Silvio Weging 2023

   Contains: File upload handling



Attributes
----------

.. autoapisummary::

   code_General.handlers.files.logger
   code_General.handlers.files.loggerError


Classes
-------

.. autoapisummary::

   code_General.handlers.files.SReqGenericUploadFiles


Functions
---------

.. autoapisummary::

   code_General.handlers.files.genericUploadFiles
   code_General.handlers.files.genericDownloadFile
   code_General.handlers.files.genericDownloadFilesAsZip
   code_General.handlers.files.genericDeleteFile


Module Contents
---------------

.. py:data:: logger

.. py:data:: loggerError

.. py:class:: SReqGenericUploadFiles(instance=None, data=empty, **kwargs)

   Bases: :py:obj:`rest_framework.serializers.Serializer`


   The BaseSerializer class provides a minimal class which may be used
   for writing custom serializer implementations.

   Note that we strongly restrict the ordering of operations/properties
   that may be used on the serializer in order to enforce correct usage.

   In particular, if a `data=` argument is passed then:

   .is_valid() - Available.
   .initial_data - Available.
   .validated_data - Only available after calling `is_valid()`
   .errors - Only available after calling `is_valid()`
   .data - Only available after calling `is_valid()`

   If a `data=` argument is not passed then:

   .is_valid() - Not available.
   .initial_data - Not available.
   .validated_data - Not available.
   .errors - Not available.
   .data - Available.


   .. py:attribute:: file


.. py:function:: genericUploadFiles(request: rest_framework.request.Request)

   Generic file upload

   :param request: Request with files in it
   :type request: HTTP POST
   :return: Successful or not
   :rtype: HTTP Response


.. py:function:: genericDownloadFile(request: rest_framework.request.Request, fileID)

   Send file to user from storage

   :param request: Request of user for a specific file
   :type request: HTTP POST
   :param fileID: file ID
   :type fileID: Str
   :return: Saved content
   :rtype: FileResponse



.. py:function:: genericDownloadFilesAsZip(request: rest_framework.request.Request)

   Send files to user as zip

   :param request: Request of user for all selected files
   :type request: HTTP POST
   :return: Saved content
   :rtype: FileResponse



.. py:function:: genericDeleteFile(request: rest_framework.request.Request, fileID)

   Delete a file from storage

   :param request: Request of user for a specific file
   :type request: HTTP DELETE
   :param fileID: file ID
   :type fileID: Str
   :return: Successful or not
   :rtype: HTTPResponse



